% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_ds_metacell.R, R/plot_metacell.R
\name{metacell-plots}
\alias{metacell-plots}
\alias{mod_ds_metacell_ui}
\alias{mod_ds_metacell_server}
\alias{metacellPerLinesHisto_HC}
\alias{metacellPerLinesHistoPerCondition_HC}
\alias{metacellHisto_HC}
\alias{wrapper.mvImage}
\alias{mvImage}
\alias{hc_mvTypePlot2}
\title{Displays a correlation matrix of the quantitative data of a
numeric matrix.}
\usage{
mod_ds_metacell_ui(id)

mod_ds_metacell_server(
  id,
  vizData,
  pal = reactive({
     NULL
 }),
  pattern = reactive({
     NULL
 }),
  showSelect = reactive({
     TRUE
 })
)

metacellPerLinesHisto_HC(
  vizData,
  pattern = NULL,
  detailed = FALSE,
  indLegend = "auto",
  showValues = FALSE
)

metacellPerLinesHistoPerCondition_HC(
  vizData,
  pattern = NULL,
  indLegend = "auto",
  showValues = FALSE,
  pal = NULL
)

metacellHisto_HC(
  vizData,
  pattern = NULL,
  indLegend = "auto",
  showValues = FALSE,
  pal = NULL
)

wrapper.mvImage(vizData, pattern = "Missing MEC")

mvImage(vizData)

hc_mvTypePlot2(vizData, pal = NULL, pattern, typeofMV = NULL, title = NULL)
}
\arguments{
\item{id}{xxx}

\item{vizData}{xxx}

\item{pal}{The different colors for conditions}

\item{pattern}{xxx}

\item{showSelect}{xxx}

\item{detailed}{'value' or 'percent'}

\item{indLegend}{xxx}

\item{showValues}{A logical that indicates whether numeric values should be
drawn above the bars.}

\item{typeofMV}{xxx}

\item{title}{The title of the plot}
}
\value{
NA

A bar plot

A heatmap

A heatmap

Density plots
}
\description{
xxxx

This method plots a bar plot which represents the distribution of the
number of missing values (NA) per lines (ie proteins).

Plots a heatmap of the quantitative data. Each column represent one of
the conditions in the object of class \code{VizData} and
the color is proportional to the mean of intensity for each line of
the dataset.
The lines have been sorted in order to vizualize easily the different
number of missing values. A white square is plotted for missing values.

#' Plots a heatmap of the quantitative data. Each column represent one of
the conditions in the object of class \code{MsnSet} and
the color is proportional to the mean of intensity for each line of
the dataset.
The lines have been sorted in order to vizualize easily the different
number of missing values. A white square is plotted for missing values.

This method shows density plots which represents the repartition of
Partial Observed Values for each replicate in the dataset.
The colors correspond to the different conditions (slot Condition in in the
dataset of class \code{MsnSet}).
The x-axis represent the mean of intensity for one condition and one
entity in the dataset (i. e. a protein)
whereas the y-axis count the number of observed values for this entity
and the considered condition.
}
\examples{
library(highcharter)
library(shinyBS)
library(shiny)

ui <- fluidPage(
  mod_ds_metacell_ui('test')
)

server <- function(input, output) {
  data(Exp1_R25_pept, package='DaparToolshedData')
  vList <- convert2viz(Exp1_R25_pept)
  vData <- vList@ll.vizData[[1]]
  
  rv <- reactiveValues(
    tags = NULL
  )
  #pattern <- c('Missing POV', 'Missing MEC')
   pattern <- NULL
   
  observe({
    rv$tags <- mod_ds_metacell_server('test',
                           vizData = reactive({vData}),
                           pal = reactive({NULL}),
                           pattern = reactive({pattern}),
                           showSelect = reactive({is.null(pattern)})
    )
  })
  
}

if (interactive())
  shinyApp(ui = ui, server = server)


library(QFeatures)
library(DaparViz)

#vList <- BuildExampleDataset('QFeatures')
vList <- BuildExampleDataset('MSnbase')
#vList <- BuildExampleDataset('list')

vData <- GetVizData(vList, 1)
pal <- ExtendPalette(length(unique(vData@conds)), "Dark2")


metacellPerLinesHisto_HC(vData, pattern = "Missing POV")
metacellPerLinesHisto_HC(vData)
metacellPerLinesHisto_HC(vData, pattern = "Quantified")
metacellPerLinesHisto_HC(vData, pattern = "Quant. by direct id")
metacellPerLinesHisto_HC(vData, pattern = "Quant. by recovery")
pattern <- c("Quantified", "Quant. by direct id", "Quant. by recovery")
metacellPerLinesHisto_HC(vData, pattern = pattern)


metacellPerLinesHistoPerCondition_HC(vData, pattern = "Missing POV")
metacellPerLinesHistoPerCondition_HC(vData)
metacellPerLinesHistoPerCondition_HC(vData, pattern = "Quantified")
metacellPerLinesHistoPerCondition_HC(vData, pattern = "Quant. by direct id")
metacellPerLinesHistoPerCondition_HC(vData, pattern = "Quant. by recovery")
pattern <- c("Quantified", "Quant. by direct id", "Quant. by recovery")
metacellPerLinesHistoPerCondition_HC(vData, pattern = pattern)


metacellHisto_HC(vData, pattern = "Missing POV")
metacellHisto_HC(vData)
metacellHisto_HC(vData, pattern = "Quantified")
metacellHisto_HC(vData, pattern = "Quant. by direct id")
metacellHisto_HC(vData, pattern = "Quant. by recovery")
pattern <- c("Quantified", "Quant. by direct id", "Quant. by recovery")
metacellHisto_HC(vData, pattern = pattern)
data(Exp1_R25_pept, package = 'DaparToolshedData')
vData <- convert2viz(Exp1_R25_pept)
pattern <- "Missing POV"
pal <- ExtendPalette(2, "Dark2")
metacellHisto_HC(vData@ll.vizData[[1]], pattern, showValues = TRUE, pal = pal)

data(Exp1_R25_pept, package = 'DaparToolshedData')
vData <- convert2viz(Exp1_R25_pept)
mvImage(vData@ll.vizData[[1]])

data(Exp1_R25_pept, package = 'DaparToolshedData')
vData <- convert2viz(Exp1_R25_pept)
pal <- ExtendPalette(length(unique(vData@ll.vizData[[1]]@conds)), "Dark2")
pattern <- "Missing MEC"
hc_mvTypePlot2(vData@ll.vizData[[1]], pattern = pattern, pal = pal)

}
\author{
Florence Combes, Samuel Wieczorek

Samuel Wieczorek, Alexia Dorffer

Samuel Wieczorek, Thomas Burger

Samuel Wieczorek
}
