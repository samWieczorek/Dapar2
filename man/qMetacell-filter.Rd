% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DaparToolshed_filter_qMetadata.R
\name{qMetacell-filter}
\alias{qMetacell-filter}
\alias{qMetacellFilteringScope}
\alias{SymFilteringOperators}
\alias{qMetacellWholeMatrix}
\alias{qMetacellWholeLine}
\alias{qMetacellOnConditions}
\title{Search lines which respects request on one or more conditions.}
\usage{
qMetacellFilteringScope()

SymFilteringOperators()

qMetacellWholeMatrix(object, cmd, pattern, percent, th, operator)

qMetacellWholeLine(object, cmd, pattern)

qMetacellOnConditions(object, cmd, mode, pattern, conds, percent, operator, th)
}
\arguments{
\item{object}{xxx}

\item{cmd}{Available values are:}

\item{pattern}{ss}

\item{percent}{xxx}

\item{th}{The theshold to apply}

\item{operator}{String for operator to use. List of operators is available
with SymFilteringOperators().}

\item{mode}{xxx}

\item{conds}{xxx}
}
\value{
NA

NA

NA

NA

NA

NA
}
\description{
This function looks for the lines that respect the request in either all
conditions or at least one condition.
}
\examples{
data(ft, package='DaparToolshed')
obj <- ft[[1]]
level <- typeOfData(ft, 1)
pattern <- "missing"
mask <- match.qMetacell(
    metadata = qMetacell(obj),
    pattern = pattern,
    level = level
)
percent <- FALSE
th <- 3
op <- ">="
ind <- qMetacellWholeMatrix(mask, op, percent, th)

data(ft, package='DaparToolshed')
obj <- ft[[1]]
mask <- match.qMetacell(
    metadata = qMetacell(obj),
    pattern = "missing POV",
    level = typeOfData(obj)
)
ind <- qMetacellWholeLine(mask)

#' data(ft, package='DaparToolshed')
obj <- ft[[1]]
mask <- match.qMetacell(
    metadata = qMetacell(obj),
    pattern = "missing",
    level = typeOfData(obj)
)
type <- "AllCond"
conds <- design.qf(ft)$Condition
op <- ">="
th <- 2
percent <- FALSE
ind <- qMetacellOnConditions(mask, type, conds, percent, op, th)

qMetacellFilteringScope()

SymFilteringOperators()

NA

}
